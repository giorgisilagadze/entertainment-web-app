import Head from "next/head";
import { Inter } from "next/font/google";
import { GlobalStyled } from "@/styles/Global.Styled";
import Search from "../components/Search";
import {
  Trending,
  TrendingDiv,
  EachTranding,
  EachImg,
  BookmarkDiv,
  BookmarkIcon,
  Properties,
  PropertiesText,
  Dot,
  IconMovie,
  TitleBookm,
  Recomended,
} from "@/styles/Home.Styled";
import Movie from "@/components/Movie";

const inter = Inter({ subsets: ["latin"] });

interface Data {
  isData: Array<{
    thumbnail: {
      trending?: {
        small: string;
        large: string;
        id: string;
      };
      regular: {
        small: string;
        medium: string;
        large: string;
        id: string;
      };
    };
    title: string;
    year: number;
    category: string;
    rating: string;
    isBookmarked: boolean;
    isTrending: boolean;
    id: string;
  }>;
  setIsData: (isData: Array<{}>) => void;
}

interface Input {
  inputValue: string;
  setInputValue: (inputValue: string) => void;
}

export default function Home(
  { isData, setIsData }: Data,
  { inputValue, setInputValue }: Input
) {
  const trending = isData.filter((item: any) => item.isTrending == true);
  const notTrending = isData.filter((item: any) => item.isTrending == false);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;500&display=swap"
          rel="stylesheet"
        />
      </Head>
      <Search
        isData={isData}
        setIsData={setIsData}
        // inputValue={inputValue}
        // setInputValue={setInputValue}
      />
      {inputValue != "" && (
        <>
          {" "}
          <Trending>Trending</Trending>
          <TrendingDiv>
            {trending.map((item: any) => (
              <EachTranding key={Math.random()}>
                <EachImg src={item.thumbnail.trending.small} alt={item.name} />
                <BookmarkDiv
                  onClick={() => {
                    const index = isData.findIndex(
                      (movie: any) => movie.id == item.id
                    );
                    const clone: any = [...isData];
                    clone[index].isBookmarked = !clone[index].isBookmarked;
                    setIsData(clone);
                    console.log(index);
                  }}
                >
                  <BookmarkIcon
                    src={
                      item.isBookmarked
                        ? "./assets/icon-bookmark-full.svg"
                        : "./assets/icon-bookmark-empty.svg"
                    }
                    alt=""
                  />
                </BookmarkDiv>
                <Properties>
                  <PropertiesText>{item.year}</PropertiesText>
                  <Dot />
                  <IconMovie
                    src={
                      item.category == "Movie"
                        ? "./assets/icon-nav-movies.svg"
                        : "./assets/icon-nav-tv-series.svg"
                    }
                    alt=""
                  />
                  <PropertiesText>{item.category}</PropertiesText>
                  <Dot />
                  <PropertiesText>{item.rating}</PropertiesText>
                </Properties>
                <TitleBookm>{item.title}</TitleBookm>
              </EachTranding>
            ))}
          </TrendingDiv>
          <Trending>Recommended for you</Trending>
          <Recomended>
            {notTrending.map((item: any) => (
              <Movie
                key={Math.random()}
                image={item.thumbnail.regular.small}
                title={item.title}
                movie={item}
                year={item.year}
                rating={item.rating}
                category={item.category}
                isData={isData}
                id={item.id}
                setIsData={setIsData}
              />
            ))}
          </Recomended>
        </>
      )}
    </>
  );
}
