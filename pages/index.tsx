import Head from "next/head";
import { Inter } from "next/font/google";
import { GlobalStyled } from "@/styles/Global.Styled";
import Search from "../components/Search";
import {
  Trending,
  TrendingDiv,
  EachTranding,
  EachImg,
  BookmarkDiv,
  BookmarkIcon,
  Properties,
  PropertiesText,
  Dot,
  IconMovie,
  TitleBookm,
  Recomended,
} from "@/styles/Home.Styled";
import { useEffect, useState } from "react";
import Movie from "@/components/Movie";

const inter = Inter({ subsets: ["latin"] });

interface Bookmark {
  isBookmarked: Array<{}>;
}

export default function Home({ isBookmarked }: Bookmark) {
  const [isData, setIsData] = useState([]);
  const [isChecked, setIsChecked] = useState<Array<string>>([]);

  useEffect(() => {
    const getData = async () => {
      const response = await fetch("/api");
      const data = await response.json();
      console.log(data);
      setIsData(data);
    };

    getData();
  }, []);

  const trending = isData.filter((item: any) => item.isTrending == true);
  const notTrending = isData.filter((item: any) => item.isTrending == false);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;500&display=swap"
          rel="stylesheet"
        />
      </Head>
      <Search />
      <Trending>Trending</Trending>
      <TrendingDiv>
        {trending.map((item: any) => (
          <EachTranding key={Math.random()}>
            <EachImg src={item.thumbnail.trending.small} alt={item.name} />
            <BookmarkDiv
              onClick={() => {
                isChecked.push(item.title);
                console.log(isChecked.includes(item.title));

                isBookmarked.push(item);
                console.log(isBookmarked);
              }}
            >
              <BookmarkIcon
                src={
                  isChecked.includes(item.title)
                    ? "./assets/icon-bookmark-full.svg"
                    : "./assets/icon-bookmark-empty.svg"
                }
                alt=""
              />
            </BookmarkDiv>
            <Properties>
              <PropertiesText>{item.year}</PropertiesText>
              <Dot />
              <IconMovie
                src={
                  item.category == "Movie"
                    ? "./assets/icon-nav-movies.svg"
                    : "./assets/icon-nav-tv-series.svg"
                }
                alt=""
              />
              <PropertiesText>{item.category}</PropertiesText>
              <Dot />
              <PropertiesText>{item.rating}</PropertiesText>
            </Properties>
            <TitleBookm>{item.title}</TitleBookm>
          </EachTranding>
        ))}
      </TrendingDiv>
      <Trending>Recommended for you</Trending>
      <Recomended>
        {notTrending.map((item: any) => (
          <Movie
            setIsChecked={setIsChecked}
            isChecked={isChecked}
            image={item.thumbnail.regular.small}
            title={item.title}
            movie={item}
            year={item.year}
            rating={item.rating}
            category={item.category}
          />
        ))}
      </Recomended>
    </>
  );
}
